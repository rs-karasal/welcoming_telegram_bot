from aiogram import Router, F, Bot
from aiogram.filters import Command, StateFilter
from aiogram.types import Message, ReplyKeyboardRemove, InlineKeyboardButton, CallbackQuery
from aiogram.fsm.context import FSMContext
from aiogram.utils.keyboard import InlineKeyboardBuilder

from states.welcoming_new_member_states import CommunityMember
from keyboards.simple_row import make_row_keyboard


router = Router()
welcome_url = "https://t.me/+Ax92fc6EFdE3MDcy"


# –®–ê–ì 1: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–≥–ª–∞—Å–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–∞ –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ
@router.message(StateFilter(None), Command("start"))
async def start_cmd(message: Message, state: FSMContext):
    await message.answer(
        text="–ü—Ä–∏–≤–µ—Ç! üëã –Ø —Ç–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç, –∏ —è –ø–æ–º–æ–≥—É —Ç–µ–±–µ —Å—Ç–∞—Ç—å —Ü–µ–Ω–Ω—ã–º —É—á–∞—Å—Ç–Ω–∏–∫–æ–º –Ω–∞—à–µ–≥–æ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞ IT-—ç–Ω—Ç—É–∑–∏–∞—Å—Ç–æ–≤!\n\n"
            "–ü—Ä–µ–∂–¥–µ —á–µ–º –º—ã –Ω–∞—á–Ω–µ–º, –¥–∞–≤–∞–π —É–±–µ–¥–∏–º—Å—è, —á—Ç–æ –º—ã –Ω–∞ –æ–¥–Ω–æ–π –≤–æ–ª–Ω–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –æ–∑–Ω–∞–∫–æ–º—å—Å—è —Å –Ω–∞—à–µ–π –º–∏—Å—Å–∏–µ–π –∏ —Ü–µ–Ω–Ω–æ—Å—Ç—è–º–∏.",
        reply_markup=make_row_keyboard(["–û–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è"]))
    await state.set_state(CommunityMember.reading_agreement)


@router.message(
    CommunityMember.reading_agreement,
    F.text.in_(["–û–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è"])
)
async def show_member_agreement(message: Message, state: FSMContext):
    await message.answer(
        text="<u><b>–ú–∏—Å—Å–∏—è yDecide:</b></u>\n"
            "–ú—ã —Å—Ç—Ä–µ–º–∏–º—Å—è —Å–æ–∑–¥–∞—Ç—å —Å–æ–æ–±—â–µ—Å—Ç–≤–æ, –≥–¥–µ –ª—é–±–æ–π –∂–µ–ª–∞—é—â–∏–π –º–æ–∂–µ—Ç –æ—Å–≤–æ–∏—Ç—å –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –Ω–∞–≤—ã–∫–∏ —Å–æ–≤–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏ –≤ —Å—Ñ–µ—Ä–µ IT, –∏ –¥–æ—Å—Ç–∏—á—å —É—Å–ø–µ—Ö–∞ –≤ —ç—Ç–æ–π –æ–±–ª–∞—Å—Ç–∏. –ù–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç –±–µ–∫–≥—Ä–∞—É–Ω–¥–∞. –ë–µ–∑ —Å–∫—É—á–Ω—ã—Ö –ª–µ–∫—Ü–∏–π –∏ —à–∞–±–ª–æ–Ω–Ω—ã—Ö –∫—É—Ä—Å–æ–≤.\n\n"
            
            "<u><b>–ß—Ç–æ –±—É–¥–µ—Ç –≤ —Å–æ–æ–±—â–µ—Å—Ç–≤–µ:</b></u>\n"
            "‚úÖ–û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ –æ–ø—ã—Ç–Ω—ã—Ö —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤ –∏ –Ω–æ–≤–∏—á–∫–æ–≤. –û–±–º–µ–Ω –∑–Ω–∞–Ω–∏—è–º–∏ –∏ –æ–ø—ã—Ç–æ–º, –∑–Ω–∞–∫–æ–º—Å—Ç–≤–æ –∏ –æ–±—â–µ–Ω–∏–µ –≤ –Ω–µ—Ñ–æ—Ä–º–∞–ª—å–Ω–æ–π –æ–±—Å—Ç–∞–Ω–æ–≤–∫–µ.\n"
            "‚úÖ–†–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω—ã–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è - –≤–µ–±–∏–Ω–∞—Ä—ã –∏ –º–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å—ã —Å –æ–ø—ã—Ç–Ω—ã–º–∏ –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–∞–º–∏, —Ç–∞–∫–∂–µ —Å–æ–≤–º–µ—Å—Ç–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ –∑–∞–¥–∞—á –∏ –æ–±—Å—É–∂–¥–µ–Ω–∏–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö —Ç–µ–º –≤ IT.\n"
            "‚úÖ–ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –∏ –ø–æ–º–æ—â–∏ —Ç–µ–º, –∫—Ç–æ —Ç–æ–ª—å–∫–æ –Ω–∞—á–∏–Ω–∞–µ—Ç —Å–≤–æ–π –ø—É—Ç—å. –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –Ω–∞–π—Ç–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–≥–æ –º–µ–Ω—Ç–æ—Ä–∞ —Å –±–æ–ª—å—à–∏–º –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–º –æ–ø—ã—Ç–æ–º.",
        reply_markup=ReplyKeyboardRemove()
    )
    await message.answer(
        text="‚ùå–≠—Ç–æ –Ω–µ –æ—á–µ—Ä–µ–¥–Ω–æ–π —Ç–µ–ª–µ–≥—Ä–∞–º –∫–∞–Ω–∞–ª —Å –ø–æ–ª–µ–∑–Ω–æ—Å—Ç—è–º–∏. –¶–µ–Ω–Ω–æ—Å—Ç—å —Å–æ–æ–±—â–µ—Å—Ç–≤–∞ - —Å–∞–º–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∏.\n\n"
            
            "<u>–ü–æ–¥—Ç–≤–µ—Ä–¥–∏</u>, —á—Ç–æ —Ä–∞–∑–¥–µ–ª—è–µ—à—å –Ω–∞—à–∏ –º–∏—Å—Å–∏—é –∏ –≥–æ—Ç–æ–≤(-–∞) –∞–∫—Ç–∏–≤–Ω–æ —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –∂–∏–∑–Ω–∏ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞, –ø–æ–º–æ–≥–∞—Ç—å –¥—Ä—É–≥–∏–º –∏ –Ω–µ —Å—Ç–µ—Å–Ω—è—Ç—å—Å—è –ø—Ä–æ—Å–∏—Ç—å –æ –ø–æ–º–æ—â–∏. –°–æ–±–ª—é–¥–∞—Ç—å –æ–±—â–∏–µ –ø—Ä–∞–≤–∏–ª–∞ —ç—Ç–∏–∫–µ—Ç–∞, –Ω–µ –æ—Å–∫–æ—Ä–±–ª—è—Ç—å —á–ª–µ–Ω–æ–≤ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞ –∏ —Å —É–≤–∞–∂–µ–Ω–∏–µ–º –æ—Ç–Ω–æ—Å–∏—Ç—å—Å—è –∫ –º–Ω–µ–Ω–∏—é —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞.",
        reply_markup=make_row_keyboard(["–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é", "–ù–µ —Ä–∞–∑–¥–µ–ª—è—é"])
    )
    await state.set_state(CommunityMember.choosing_member_agreement)


@router.message(CommunityMember.reading_agreement)
async def show_member_agreement_incorrect(message: Message):
    await message.answer(
        text="–Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é.\n\n"
             "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏ '–û–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è' –∏–ª–∏ –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É —Å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–º —Ç–µ–∫—Å—Ç–æ–º.",
        reply_markup=make_row_keyboard(["–û–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è"])
    )


# –®–ê–ì 2: –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–º–µ–Ω–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞
@router.message(
    CommunityMember.choosing_member_agreement,
    F.text.in_(["–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é", "–ù–µ —Ä–∞–∑–¥–µ–ª—è—é"])
)
async def member_agreement_chosen(message: Message, state: FSMContext):
    if message.text.lower() == "–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é":
        await state.update_data(chosen_member_agreement=message.text.lower())
        await message.answer(
            text="–û—Ç–ª–∏—á–Ω–æ! üôÇ –ß—Ç–æ–±—ã –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ –±—ã–ª–æ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–º, –¥–∞–≤–∞–π –ø–æ–∑–Ω–∞–∫–æ–º–∏–º —Ç–µ–±—è —Å –∫–æ–º—å—é–Ω–∏—Ç–∏. –î–ª—è —ç—Ç–æ–≥–æ –æ—Ç–≤–µ—Ç—å –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –Ω–∞ 5 –≤–æ–ø—Ä–æ—Å–æ–≤ –æ —Å–µ–±–µ.\n\n"
                "–≠—Ç–æ—Ç —ç—Ç–∞–ø –º–æ–∂–Ω–æ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –∏ –Ω–∞—á–∞—Ç—å –æ–±—â–µ–Ω–∏–µ '–∞–Ω–æ–Ω–∏–º–Ω–æ', –Ω–æ —Ä–µ–∫–æ–º–µ–Ω–¥—É—é –≤—Å–µ –∂–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç—å—Å—è.",
            reply_markup=ReplyKeyboardRemove())
        
        builder = InlineKeyboardBuilder()
        builder.add(InlineKeyboardButton(
            text="–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å",
            callback_data="skip_hellowing"
        ))

        await message.answer(
            text="1/5. –ù–∞–ø–∏—à–∏, –∫–∞–∫ –º–æ–∂–Ω–æ –∫ —Ç–µ–±–µ –æ–±—Ä–∞—â–∞—Ç—å—Å—è? (–∏–ª–∏ –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å)",
            reply_markup=builder.as_markup())
    
        await state.set_state(CommunityMember.choosing_member_name)
    else:
        await state.clear()
        await message.answer("–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —è –Ω–µ –º–æ–≥—É –¥–∞—Ç—å –¥–æ—Å—Ç—É–ø –∫ —Å–æ–æ–±—â–µ—Å—Ç–≤—É. üòî –í–æ–∑–º–æ–∂–Ω–æ, –≤ —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑.", reply_markup=ReplyKeyboardRemove())


@router.message(CommunityMember.choosing_member_agreement)
async def member_agreement_chosen_incorrectly(message: Message):
    await message.answer(
        text="–Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é.\n\n"
             "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤:",
        reply_markup=make_row_keyboard(["–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é", "–ù–µ —Ä–∞–∑–¥–µ–ª—è—é"])
    )

# –®–ê–ì 2.5: –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ –±–µ–∑ —Å–±–æ—Ä–∞ –∏–Ω—Ñ—ã
@router.callback_query(F.data == "skip_hellowing")
async def cancel_hellowing(callback: CallbackQuery, state: FSMContext):
    join_community_builder = InlineKeyboardBuilder()
    join_community_builder.add(InlineKeyboardButton(
        text="–í—Å—Ç—É–ø–∏—Ç—å –≤ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ",
        # callback_data="skip_and_join",
        url=welcome_url
    ))
    await callback.message.answer(
        text="–ù–µ –±—É–¥—É –Ω–∞—Å—Ç–∞–∏–≤–∞—Ç—å. üôÇüëå\n\n–ú–æ–∂–µ—à—å –≤—Å—Ç—É–ø–∏—Ç—å –≤ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ –ø–æ –∫–Ω–æ–ø–∫–µ –∏ –Ω–∞—á–∞—Ç—å –æ–±—â–µ–Ω–∏–µ.",
        reply_markup=join_community_builder.as_markup()
    )
    await state.set_state()
    await callback.answer()


# –®–ê–ì 3: –ø–æ–ª—É—á–µ–Ω–∏–µ –ª–æ–∫–∞—Ü–∏–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞
@router.message(CommunityMember.choosing_member_name)
async def member_name_chosen(message: Message, state: FSMContext):
    await state.update_data(chosen_member_name=message.text.title())
    await message.answer(
        text=f"–†–∞–¥ –∑–Ω–∞–∫–æ–º—Å—Ç–≤—É, <b>{message.text.title()}</b>.\n\n2/5. –í –∫–∞–∫–æ–º –≥–æ—Ä–æ–¥–µ —Å–µ–π—á–∞—Å –ø—Ä–æ–∂–∏–≤–∞–µ—à—å?"
        )
    await state.set_state(CommunityMember.choosing_member_location)


# –®–ê–ì 4: –ø–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–µ–π —Å—Ñ–µ—Ä—ã IT –∏ –æ–ø—ã—Ç–∞ —Ä–∞–±–æ—Ç—ã
@router.message(CommunityMember.choosing_member_location)
async def member_location_chosen(message: Message, state: FSMContext):
    await state.update_data(chosen_member_location=message.text.title())
    await message.answer(
        text=f"–ö–æ–≥–¥–∞-–Ω–∏–±—É–¥—å –ø–æ–±—ã–≤–∞—é –≤ <b>{message.text.title()}</b>, –∫–æ–≥–¥–∞ –ò–ò –∑–∞—Ö–≤–∞—Ç–∏—Ç –º–∏—Ä –∏ —É –º–µ–Ω—è –ø–æ—è–≤–∏—Ç—Å—è —Ñ–∏–∑–∏—á–µ—Å–∫–∞—è –æ–±–æ–ª–æ—á–∫–∞, —Ö–µ-—Ö–µ...\n\n"
            "3/5. –ê —Ç–µ–ø–µ—Ä—å —Ä–∞—Å—Å–∫–∞–∂–∏ –ø—Ä–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ IT, –∫–æ—Ç–æ—Ä–æ–µ —Ç–µ–±–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ –∏ —Ç–µ–∫—É—â–∏–π –æ–ø—ã—Ç –≤ —ç—Ç–æ–π —Å—Ñ–µ—Ä–µ.",
    )
    await state.set_state(CommunityMember.choosing_member_exp)


# –®–ê–ì 5: –ø–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± —É—á–∞—Å—Ç–Ω–∫–∏–µ –≤ —Å–≤–æ–±–æ–¥–Ω–æ–π —Ñ–æ—Ä–º–µ
@router.message(CommunityMember.choosing_member_exp)
async def member_exp_chosen(message: Message, state: FSMContext):
    await state.update_data(chosen_member_exp=message.text)
    await message.answer(
        text="–ü–æ–Ω—è–ª.\n\n4/5. –ù–∞–ø–∏—à–∏ –æ —Å–µ–±–µ –Ω–µ–º–Ω–æ–≥–æ –≤ —Å–≤–æ–±–æ–¥–Ω–æ–π —Ñ–æ—Ä–º–µ (–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ, —É–≤–ª–µ—á–µ–Ω–∏–µ, —Ö–æ–±–±–∏, —Ü–µ–ª–∏ –≤ –ê–π–¢–∏ –∏ —Ç.–¥.)."
    )
    await state.set_state(CommunityMember.choosing_member_bio)


# –®–ê–ì 6: –ø–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± —É—á–∞—Å—Ç–Ω–∫–∏–µ –≤ —Å–≤–æ–±–æ–¥–Ω–æ–π —Ñ–æ—Ä–º–µ
@router.message(CommunityMember.choosing_member_bio)
async def member_bio_chosen(message: Message, state: FSMContext):
    await state.update_data(chosen_member_bio=message.text)
    await message.answer(
        text="5/5. –ù–∞–∫–æ–Ω–µ—Ü, –æ–ø–∏—à–∏ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –∫–∞–∫–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –æ—Ç —Å–æ–æ–±—â–µ—Å—Ç–≤–∞ –µ–¥–∏–Ω–æ–º—ã—à–ª–µ–Ω–Ω–∏–∫–æ–≤ (–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏, –∫–æ–Ω—Ç–µ–Ω—Ç –∏ —Ç.–¥.)."
    )
    await state.set_state(CommunityMember.choosing_member_goal)


# –®–ê–ì7: –≤—Å—è –∏–Ω—Ñ–∞ –ø–æ–ª—É—á–µ–Ω–∞, –æ—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ –≥—Ä—É–ø–ø—É yDecide
@router.message(CommunityMember.choosing_member_goal)
async def member_goal_chosen(message: Message, state: FSMContext):
    await state.update_data(chosen_member_goal=message.text)
    data = await state.get_data()
    await message.answer(
        text="<b>–£—á–∞—Å—Ç–Ω–∏–∫–∞–º —Å–æ–æ–±—â–µ—Å—Ç–≤–∞ yDecide –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ:</b>\n\n"
            f"–í—Å–µ–º –ø—Ä–∏–≤–µ—Ç! ‚úãüôÇ –ú–µ–Ω—è –∑–æ–≤—É—Ç <b>{data['chosen_member_name']}</b>!\n"
            f"–ü—Ä–æ–∂–∏–≤–∞—é –≤ <b>{data['chosen_member_location']}</b>.\n"
            f"–ò–Ω—Ç–µ—Ä–µ—Å—É—é—â–∞—è —Å—Ñ–µ—Ä–∞ IT –∏ –æ–ø—ã—Ç: <b>{data['chosen_member_exp']}</b>.\n"
            f"–ù–µ–º–Ω–æ–≥–æ –æ —Å–µ–±–µ: <b>{data['chosen_member_bio']}</b>.\n"
            f"–û–∂–∏–¥–∞–Ω–∏—è –æ—Ç –∫–æ–º–º—å—é–Ω–∏—Ç–∏: <b>{data['chosen_member_goal']}</b>.\n\n"
            f"–¢–µ–ª–µ–≥—Ä–∞–º: @{message.from_user.username}",
            reply_markup=make_row_keyboard(["–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –≤—Å—Ç—É–ø–∏—Ç—å –≤ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ"])
            )
    await state.set_state(CommunityMember.finish_state)


@router.message(CommunityMember.finish_state, F.text.in_(["–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –≤—Å—Ç—É–ø–∏—Ç—å –≤ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ"]))
async def send_message_and_join(message: Message, bot: Bot, state: FSMContext):
    data = await state.get_data()
    await bot.send_message(
        chat_id=-1002104440872,
        text="#–æ–±–æ–º–Ω–µ\n\n"
            f"–í—Å–µ–º –ø—Ä–∏–≤–µ—Ç! ‚úãüôÇ –ú–µ–Ω—è –∑–æ–≤—É—Ç <b>{data['chosen_member_name']}</b>!\n"
            f"–ü—Ä–æ–∂–∏–≤–∞—é –≤ <b>{data['chosen_member_location']}</b>.\n"
            f"–ò–Ω—Ç–µ—Ä–µ—Å—É—é—â–∞—è —Å—Ñ–µ—Ä–∞ IT –∏ –æ–ø—ã—Ç: <b>{data['chosen_member_exp']}</b>.\n"
            f"–ù–µ–º–Ω–æ–≥–æ –æ —Å–µ–±–µ: <b>{data['chosen_member_bio']}</b>.\n"
            f"–û–∂–∏–¥–∞–Ω–∏—è –æ—Ç –∫–æ–º–º—å—é–Ω–∏—Ç–∏: <b>{data['chosen_member_goal']}</b>.\n\n"
            f"–¢–µ–ª–µ–≥—Ä–∞–º: @{message.from_user.username}",
        message_thread_id=2
        )
    await bot.send_message(
        chat_id=-1002104440872,
        text="#–æ–±–æ–º–Ω–µ\n\n"
            f"–í—Å–µ–º –ø—Ä–∏–≤–µ—Ç! ‚úãüôÇ –ú–µ–Ω—è –∑–æ–≤—É—Ç <b>{data['chosen_member_name']}</b>!\n"
            f"–ü—Ä–æ–∂–∏–≤–∞—é –≤ <b>{data['chosen_member_location']}</b>.\n"
            f"–ò–Ω—Ç–µ—Ä–µ—Å—É—é—â–∞—è —Å—Ñ–µ—Ä–∞ IT –∏ –æ–ø—ã—Ç: <b>{data['chosen_member_exp']}</b>.\n"
            f"–ù–µ–º–Ω–æ–≥–æ –æ —Å–µ–±–µ: <b>{data['chosen_member_bio']}</b>.\n"
            f"–û–∂–∏–¥–∞–Ω–∏—è –æ—Ç –∫–æ–º–º—å—é–Ω–∏—Ç–∏: <b>{data['chosen_member_goal']}</b>.\n\n"
            f"–¢–µ–ª–µ–≥—Ä–∞–º: @{message.from_user.username}",
        message_thread_id=63
        )
    await message.answer(
        text="–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! üëê\n"
            f"{welcome_url}",
        reply_markup=ReplyKeyboardRemove()
        )
    await state.clear()